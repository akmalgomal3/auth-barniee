{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for Barniee Auth Service.",
        "title": "Barniee Auth Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@barniee.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of all users, with optional filtering by role. Accessible by admins.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Get All Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter users by role (teacher, student, admin)",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.UserListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an admin to create a new teacher or student account within their school.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Create Teacher or Student",
                "parameters": [
                    {
                        "description": "User details to create",
                        "name": "createUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.UserDataResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific user's details by their ID. Accessible by admins.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Get User By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.UserDataResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the details of an existing user. Accessible by admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User details to update",
                        "name": "updateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.UserDataResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a user by their ID. Accessible by admins.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.LoginResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invalidates the client-side JWT token (no server-side session invalidation for stateless JWT).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the basic profile information of the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.UserProfileResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/admin-info": {
            "post": {
                "description": "Step 2 of school registration: Register the primary admin user for the school.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Register Admin Information",
                "parameters": [
                    {
                        "description": "Admin Information",
                        "name": "registerAdminInfoRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterAdminInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin user created and linked to school",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.RegisterAdminInfoResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/complete": {
            "post": {
                "description": "Step 6 of school registration: Finalizes the registration process after all previous steps are complete (including payment if applicable).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Complete School Registration",
                "parameters": [
                    {
                        "description": "School ID to complete registration for",
                        "name": "completeRegistrationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CompleteRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School registration completed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.CompleteRegistrationResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/email-verification/request-otp": {
            "post": {
                "description": "Step 4 of school registration: Sends an OTP to the user's email for verification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Request Email Verification OTP",
                "parameters": [
                    {
                        "description": "User ID for OTP request",
                        "name": "requestOTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent to email successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/email-verification/verify-otp": {
            "post": {
                "description": "Step 4 of school registration: Verifies the OTP sent to the user's email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Verify Email OTP",
                "parameters": [
                    {
                        "description": "User ID and OTP for verification",
                        "name": "verifyOTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VerifyOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid/expired OTP)",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/packages": {
            "get": {
                "description": "Retrieves a list of all available subscription packages (Free Trial, Premium, Enterprise).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Get All Available Packages",
                "responses": {
                    "200": {
                        "description": "Packages retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.GetAllPackagesResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/school-info": {
            "post": {
                "description": "Step 1 of school registration: Register basic school details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Register School Information",
                "parameters": [
                    {
                        "description": "School Information",
                        "name": "registerSchoolInfoRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterSchoolInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "School info registered successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.RegisterSchoolInfoResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        },
        "/register/select-package": {
            "post": {
                "description": "Step 3 of school registration: Selects a subscription package for the school.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School Registration"
                ],
                "summary": "Select Package",
                "parameters": [
                    {
                        "description": "Package Selection",
                        "name": "selectPackageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SelectPackageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package selected successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handlers.SelectPackageResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CommonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "handlers.CompleteRegistrationRequest": {
            "type": "object",
            "required": [
                "school_id"
            ],
            "properties": {
                "school_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                }
            }
        },
        "handlers.CompleteRegistrationResponseData": {
            "type": "object",
            "properties": {
                "school": {
                    "$ref": "#/definitions/models.School"
                }
            }
        },
        "handlers.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Teacher John"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "securepassword"
                },
                "role_name": {
                    "type": "string",
                    "enum": [
                        "teacher",
                        "student"
                    ],
                    "example": "teacher"
                }
            }
        },
        "handlers.GetAllPackagesResponseData": {
            "type": "object",
            "properties": {
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Package"
                    }
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handlers.LoginResponseData": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "handlers.RegisterAdminInfoRequest": {
            "type": "object",
            "required": [
                "admin_email",
                "admin_name",
                "position",
                "school_id",
                "whatsapp_number"
            ],
            "properties": {
                "admin_email": {
                    "type": "string",
                    "example": "siti.aminah@example.com"
                },
                "admin_name": {
                    "type": "string",
                    "example": "Siti Aminah"
                },
                "position": {
                    "type": "string",
                    "example": "Direktur"
                },
                "school_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                },
                "whatsapp_number": {
                    "type": "string",
                    "example": "081234567890"
                }
            }
        },
        "handlers.RegisterAdminInfoResponseData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "siti.aminah@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "GeneratedPass123"
                },
                "school_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                },
                "user_id": {
                    "type": "string",
                    "example": "f1e2d3c4-b5a6-9876-5432-10fedcba9876"
                }
            }
        },
        "handlers.RegisterSchoolInfoRequest": {
            "type": "object",
            "required": [
                "address",
                "education_level",
                "initial_student_count",
                "name",
                "status"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Jl. Inovasi No. 10, Kota Teknologi"
                },
                "education_level": {
                    "type": "string",
                    "enum": [
                        "SD",
                        "SMP",
                        "SMA",
                        "SMK",
                        "PerguruanTinggi",
                        "Lainnya"
                    ],
                    "example": "SMA"
                },
                "initial_student_count": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 150
                },
                "name": {
                    "type": "string",
                    "example": "Barniee Academy"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Negeri",
                        "Swasta"
                    ],
                    "example": "Swasta"
                }
            }
        },
        "handlers.RegisterSchoolInfoResponseData": {
            "type": "object",
            "properties": {
                "school_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                },
                "school_name": {
                    "type": "string",
                    "example": "Barniee Academy"
                }
            }
        },
        "handlers.RequestOTPRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "f1e2d3c4-b5a6-9876-5432-10fedcba9876"
                }
            }
        },
        "handlers.SelectPackageRequest": {
            "type": "object",
            "required": [
                "package_id",
                "school_id"
            ],
            "properties": {
                "package_id": {
                    "type": "string",
                    "example": "package-uuid-for-premium"
                },
                "school_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                }
            }
        },
        "handlers.SelectPackageResponseData": {
            "type": "object",
            "properties": {
                "school": {
                    "$ref": "#/definitions/models.School"
                }
            }
        },
        "handlers.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role_name": {
                    "type": "string",
                    "enum": [
                        "teacher",
                        "student",
                        "admin"
                    ],
                    "example": "student"
                }
            }
        },
        "handlers.UserDataResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "handlers.UserListResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "handlers.UserProfileResponseData": {
            "type": "object",
            "properties": {
                "school": {
                    "$ref": "#/definitions/models.School"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "handlers.VerifyOTPRequest": {
            "type": "object",
            "required": [
                "otp",
                "user_id"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "example": "123456"
                },
                "user_id": {
                    "type": "string",
                    "example": "f1e2d3c4-b5a6-9876-5432-10fedcba9876"
                }
            }
        },
        "models.Package": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "duration_days": {
                    "type": "integer"
                },
                "features": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_students": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_per_student": {
                    "type": "number"
                },
                "price_per_year": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.School": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "admin_user_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "education_level": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "initial_student_count": {
                    "type": "integer"
                },
                "max_students_allowed": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "package": {
                    "$ref": "#/definitions/models.Package"
                },
                "package_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscription_end_date": {
                    "type": "string"
                },
                "subscription_start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "role_id": {
                    "type": "string"
                },
                "school_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "whatsapp_number": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}